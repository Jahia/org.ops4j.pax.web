<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2020 OPS4J.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.ops4j.pax.web.itest</groupId>
		<artifactId>pax-web-itest-container</artifactId>
		<version>8.0.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<groupId>org.ops4j.pax.web.itest</groupId>
	<artifactId>pax-web-itest-container-common</artifactId>
	<packaging>bundle</packaging>

	<name>OPS4J Pax Web - Container Tests - Common</name>

	<description>Abstract Pax Web integration tests for all containers</description>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>

			<!-- Felix plugins -->

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Import-Package>
							<!-- ranges indicate Servlet API 3.1+ (JavaEE 7+) -->
							javax.servlet;version="[3.1,5)",
							javax.servlet.annotation;version="[3.1,5)",
							javax.servlet.http;version="[3.1,5)",

							<!-- ranges indicate we can work with OSGi Core R6+ -->
							org.osgi.framework;version="[1.8,2)",
							org.osgi.framework.wiring;version="[1.2,2)",
							org.osgi.util.tracker;version="[1.5,2)",

							<!-- OSGi cmpn -->
							org.osgi.service.cm;resolution:=optional,
							org.osgi.service.http;version="[1.2,2)",
							org.osgi.service.http.runtime.dto;version="[1.1,2)",
							org.osgi.service.http.runtime;version="[1.1,2)",

							<!-- from pax-web-api -->
							org.ops4j.pax.web.service;version="${pax-web.osgi.version}",
							org.ops4j.pax.web.service.whiteboard;version="${pax-web.osgi.version}",

							<!-- from pax-web-spi -->
							org.ops4j.pax.web.service.spi.model.events,
							org.ops4j.pax.web.service.spi.servlet,

							<!-- from pax-web-itest-utils -->
							org.ops4j.pax.web.itest.utils,
							org.ops4j.pax.web.itest.utils.assertion,
							org.ops4j.pax.web.itest.utils.client,
							org.ops4j.pax.web.itest.utils.web,

							<!-- from pax-logging-api -->
							org.slf4j;version="[1.7,2)",

							<!-- test dependencies -->
							javax.inject
						</Import-Package>
						<DynamicImport-Package>
							org.junit,
							org.junit.*,
							org.ops4j.pax.exam,
							org.ops4j.pax.exam.*,
							<!--
								These are dynamically imported, because we don't want refresh after installation
								of the bundles that export these packages
							-->
							org.ops4j.pax.web.extender.whiteboard.runtime,
							org.ops4j.pax.web.extender.samples.whiteboard.internal
						</DynamicImport-Package>
						<Export-Package>
							org.ops4j.pax.web.itest,
							org.ops4j.pax.web.itest.container.*
						</Export-Package>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>

		<!-- All dependencies have scope=compile, which will become scope=test in Jetty/Tomcat/Undertow test projects -->

		<dependency>
			<groupId>org.ops4j.pax.web</groupId>
			<artifactId>pax-web-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web</groupId>
			<artifactId>pax-web-spi</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web</groupId>
			<artifactId>pax-web-extender-whiteboard</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web</groupId>
			<artifactId>pax-web-runtime</artifactId>
		</dependency>

		<dependency>
			<groupId>org.ops4j.pax.web.itest</groupId>
			<artifactId>pax-web-itest-common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web.itest</groupId>
			<artifactId>pax-web-itest-utils</artifactId>
		</dependency>

		<dependency>
			<groupId>org.ops4j.pax.web.samples</groupId>
			<artifactId>hs-helloworld</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.web.samples</groupId>
			<artifactId>whiteboard</artifactId>
		</dependency>

		<!-- OPS4J dependencies -->

		<dependency>
			<groupId>org.ops4j.pax.logging</groupId>
			<artifactId>pax-logging-log4j2</artifactId>
		</dependency>

		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-junit4</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-container-native</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-invoker-junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-inject</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-extender-service</artifactId>
		</dependency>
		<!-- Preferred link because it does not require an mvn url handler implicitely. -->
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-link-mvn</artifactId>
		</dependency>

		<dependency>
			<groupId>org.ops4j.base</groupId>
			<artifactId>ops4j-base-io</artifactId>
		</dependency>

		<!-- OSGi -->

		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>osgi.core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.metatype</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.configadmin</artifactId>
		</dependency>

		<!-- JavaEE -->

		<dependency>
			<groupId>jakarta.annotation</groupId>
			<artifactId>jakarta.annotation-api</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.security.auth.message</groupId>
			<artifactId>jakarta.security.auth.message-api</artifactId>
		</dependency>

		<!-- ServiceMIX -->

		<dependency>
			<groupId>org.apache.servicemix.bundles</groupId>
			<artifactId>org.apache.servicemix.bundles.javax-inject</artifactId>
		</dependency>

		<!-- Logging -->

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
		</dependency>

		<!-- Testing -->

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>

	</dependencies>

</project>
