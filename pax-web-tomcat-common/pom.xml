<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2020 OPS4J.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.ops4j.pax</groupId>
		<artifactId>web</artifactId>
		<version>8.0.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<groupId>org.ops4j.pax.web</groupId>
	<artifactId>pax-web-tomcat-common</artifactId>
	<packaging>bundle</packaging>

	<name>OPS4J Pax Web - Tomcat Common</name>

	<description>Pax Web bundle to export packages required by pax-web-jsp and pax-web-tomcat.</description>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-tomcat-servlet-api</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.apache.tomcat</groupId>
									<artifactId>tomcat-servlet-api</artifactId>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/unpack-deps/tomcat-servlet-api</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>unpack-tomcat-jsp-api</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.apache.tomcat</groupId>
									<artifactId>tomcat-jsp-api</artifactId>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/unpack-deps/tomcat-jsp-api</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<!--
							copy javax/servlet/resources to be used in javax/servlet/jsp/resources
							to satisfy org.apache.tomcat.util.descriptor.DigesterFactory which uses class.getResources()
							for two classes - javax.servlet.ServletContext and javax.servlet.jsp.JspContext,
							but we repackage only the latter
						-->
						<id>copy-selected-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}/META-INF/resources</outputDirectory>
							<resources>
								<resource>
									<directory>${project.build.directory}/unpack-deps/tomcat-servlet-api/javax/servlet/resources</directory>
									<includes>
										<include>*.xsd</include>
										<include>*.dtd</include>
									</includes>
								</resource>
								<resource>
									<directory>${project.build.directory}/unpack-deps/tomcat-jsp-api/javax/servlet/jsp/resources</directory>
									<includes>
										<include>*.xsd</include>
										<include>*.dtd</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Import-Package>
							<!-- ranges indicate Servlet API 3.1+ (JavaEE 7+) -->
							javax.servlet;version="[3.1,5)",
							javax.servlet.annotation;version="[3.1,5)",
							javax.servlet.descriptor;version="[3.1,5)",

							<!-- from pax-web-jsp -->
							javax.servlet.jsp;version="2.3";resolution:=optional,
							javax.servlet.jsp.el;version="2.3";resolution:=optional,
							javax.servlet.jsp.tagext;version="2.3";resolution:=optional,

							<!-- from pax-logging-api -->
							org.apache.juli.logging,

							<!-- JavaSE -->
							javax.management,
							javax.naming,
							javax.naming.spi,
							javax.management.modelmbean,
							javax.net.ssl,
							javax.xml.parsers,
							org.xml.sax,
							org.xml.sax.ext,
							org.xml.sax.helpers,

							<!-- Optional, but used packages -->
							org.graalvm.nativeimage;resolution:=optional,
							sun.misc;resolution:=optional
						</Import-Package>
						<!--
							Without empty Private-Package, bndlib warns:
							The JAR is empty: The instructions for the JAR named
							org.ops4j.pax.web.pax-web-tomcat-common did not cause any content to be included,
							this is likely wrong
						-->
						<Private-Package />
						<Export-Package>
							<!--
								Carefuly export packages from tomcat-embed-core and explain the actual (non "embed")
								Tomcat library that originally contains given package
							-->

							<!-- tomcat-api -->
							org.apache.tomcat;version="${dependency.tomcat.version}",

							<!-- tomcat-util -->
							org.apache.tomcat.util;version="${dependency.tomcat.version}",
							org.apache.tomcat.util.buf;version="${dependency.tomcat.version}",
							org.apache.tomcat.util.codec.binary;version="${dependency.tomcat.version}",
							org.apache.tomcat.util.collections;version="${dependency.tomcat.version}",
							org.apache.tomcat.util.compat;version="${dependency.tomcat.version}",
							org.apache.tomcat.util.file;version="${dependency.tomcat.version}",
							org.apache.tomcat.util.json;version="${dependency.tomcat.version}",
							org.apache.tomcat.util.res;version="${dependency.tomcat.version}",
							org.apache.tomcat.util.security;version="${dependency.tomcat.version}",
							org.apache.tomcat.util.threads;version="${dependency.tomcat.version}",
							org.apache.tomcat.util.threads.res;version="${dependency.tomcat.version}",

							<!-- tomcat-util-scan -->
							org.apache.tomcat.util.descriptor;version="${dependency.tomcat.version}";-split-package:=merge-first,
							org.apache.tomcat.util.descriptor.tagplugin;version="${dependency.tomcat.version}",
							org.apache.tomcat.util.descriptor.tld;version="${dependency.tomcat.version}",
							org.apache.tomcat.util.descriptor.web;version="${dependency.tomcat.version}",
							org.apache.tomcat.util.digester;version="${dependency.tomcat.version}",
							org.apache.tomcat.util.scan;version="${dependency.tomcat.version}",

							<!-- tomcat-embed-core - unfortunately these packages have to be here -->
							org.apache.tomcat.util.modeler;version="${dependency.tomcat.version}",
							org.apache.tomcat.util.modeler.modules;version="${dependency.tomcat.version}",

							<!-- tomcat-juli (don't export org.apache.tomcat.juli.logging, which comes from pax-logging-api -->
							org.apache.juli;version="${dependency.tomcat.version}"
						</Export-Package>
						<Include-Resource>
							{maven-resources},
							META-INF/resources/=${project.build.outputDirectory}/META-INF/resources/
						</Include-Resource>
						<_nouses>true</_nouses>
						<_contract>!*</_contract>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>

		<!-- Tomcat -->

		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
			<!--
				runtime scope means: not required for compilation, see as transitive dependency
				with proper Export-Package, we control what actually is provided at runtime
			-->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<!--
				tomcat-embed-core doesn't contain org.apache.tomcat.util.descriptor.tld package, it's moved
				to tomcat-embed-jasper: https://github.com/apache/tomcat/commit/96e1d96e20defbc0825771c6ce7bee32e54d4c8c
			-->
			<artifactId>tomcat-util-scan</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<!--
				This dependency is used to take javax.servlet.resources package with XSDs/DTDs into pax-web-tomcat-common
				to satisfy the DigesterFactory
			-->
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<!--
				This dependency is used to take javax.servlet.jsp.resources package with XSDs/DTDs into pax-web-tomcat-common
				to satisfy the DigesterFactory
			-->
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jsp-api</artifactId>
			<scope>provided</scope>
		</dependency>

	</dependencies>

</project>
